[gd_scene load_steps=11 format=2]

[ext_resource path="res://egg/sprites/egg_1.png" type="Texture" id=2]
[ext_resource path="res://egg/sprites/egg_4.png" type="Texture" id=3]
[ext_resource path="res://egg/sprites/egg_2.png" type="Texture" id=4]
[ext_resource path="res://egg/sprites/egg_3.png" type="Texture" id=5]
[ext_resource path="res://egg/sprites/splat.png" type="Texture" id=6]

[sub_resource type="PhysicsMaterial" id=2]
bounce = 1.0

[sub_resource type="GDScript" id=6]
script/source = "class_name Egg
extends RigidBody2D

const CHICK = preload(\"res://chick/chick.tscn\")
const LIVES_LOST_VALUE: int = 1
const SCORE_VALUE: int = 1
const HATCH_WAIT_TIME = 15
const NEST_HATCH_WAIT_TIME = 3

var in_nest = false setget set_in_nest
var hatched = false
var splatted = false
var clamp_velocity = 500.0

onready var hatch_sfx = preload(\"res://egg/sfx/hatch.wav\")
onready var splat_sfx = preload(\"res://egg/sfx/splat.wav\")

onready var previous_hatch_wait_time = $HatchTimer.wait_time
onready var manager = get_node(\"/root/Manager\")
onready var game_scene = get_parent()

func _ready():
	# DEBUG set debug options
	if manager.egg_spin_on_start:
		# add a random rotation
		add_torque(manager.rng.randf_range(-50.0, 50.0))
	gravity_scale = manager.gravity
	angular_damp = manager.rot_vel_damp
	clamp_velocity = manager.clamp_egg_velocity
	if !manager.eggs_collide:
		set_collision_mask(0)
	
	$HatchTimer.start(HATCH_WAIT_TIME)

func _process(delta):
	if !hatched && !splatted:
		# change the hatching animation based on how long is left on timer
		var hatch_progress = $HatchTimer.time_left / $HatchTimer.wait_time
		if hatch_progress <= 0.25:
			$AnimatedSprite.animation = \"v_cracked\"
		elif hatch_progress <= 0.5:
			$AnimatedSprite.animation = \"cracked\"
			

func _integrate_forces(state):
	var velocity = state.get_linear_velocity()
	if velocity.length() > clamp_velocity:
		state.set_linear_velocity(velocity.clamped(clamp_velocity))


func _on_Egg_body_entered(body):
	if body.name == \"Floor\" && !hatched:
		hit_floor()

# hatch the egg when the timer runs out
func _on_HatchTimer_timeout():
	hatch()

func disable_collide():
	$EggShapeTop.set_deferred(\"disabled\", true)
	$EggShapeBottom.set_deferred(\"disabled\", true)

func hit_floor():
	splatted = true
	$HatchTimer.stop()
	$AnimatedSprite.animation = \"splat\"
	$Sfx.set_stream(splat_sfx)
	$Sfx.play()
	disable_collide()
	make_static()
	rotation_degrees = 0
	get_tree().current_scene.current_lives - LIVES_LOST_VALUE
	
func hatch():
	hatched = true
	get_tree().current_scene.current_score += SCORE_VALUE
	$AnimatedSprite.animation = \"hatched\"
	$Sfx.set_stream(hatch_sfx)
	$Sfx.play()
	spawn_chick()
	# stop chick from moving if it hatched in the nest
	if in_nest:
		make_static()
		disable_collide()
	# but if egg hatches in mid air, disable collisions and let it fall to floor
	# TODO reenable collisions but use layers so the shell hits the floor but
	# not the paddle or anything else
	else: 
		disable_collide()
	yield(get_tree().create_timer(0.25), \"timeout\")	
	queue_free()

func make_static():
	set_deferred(\"mode\", MODE_STATIC)

func spawn_chick():
	var chick = CHICK.instance()
	chick.position = position
	game_scene.add_child(chick)

# this is set from the Nest scene
func set_in_nest(new_value):
	in_nest = new_value
	# speed up the hatch time if the egg is in the nest
	if in_nest && !hatched && $HatchTimer.time_left > NEST_HATCH_WAIT_TIME:
		# save the current time left, in case the egg bounces out of the nest
		previous_hatch_wait_time = $HatchTimer.time_left
		$HatchTimer.start(NEST_HATCH_WAIT_TIME)
	# the egg bounced out, set the timer back to what it was before the egg fell in the nest
	# TODO don't think this is working right
	elif !in_nest && !hatched:
		$HatchTimer.start(previous_hatch_wait_time)
"

[sub_resource type="SpriteFrames" id=5]
animations = [ {
"frames": [ ExtResource( 2 ) ],
"loop": true,
"name": "default",
"speed": 5.0
}, {
"frames": [ ExtResource( 4 ) ],
"loop": true,
"name": "cracked",
"speed": 5.0
}, {
"frames": [ ExtResource( 6 ) ],
"loop": true,
"name": "splat",
"speed": 5.0
}, {
"frames": [ ExtResource( 3 ) ],
"loop": true,
"name": "hatched",
"speed": 5.0
}, {
"frames": [ ExtResource( 5 ) ],
"loop": true,
"name": "v_cracked",
"speed": 5.0
} ]

[sub_resource type="CircleShape2D" id=3]
radius = 7.0

[sub_resource type="CircleShape2D" id=4]
radius = 13.0

[node name="Egg" type="RigidBody2D"]
collision_layer = 2
collision_mask = 2
physics_material_override = SubResource( 2 )
contacts_reported = 1
contact_monitor = true
script = SubResource( 6 )

[node name="HatchTimer" type="Timer" parent="."]
wait_time = 30.0
one_shot = true

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
frames = SubResource( 5 )

[node name="EggShapeTop" type="CollisionShape2D" parent="."]
position = Vector2( 0, -7 )
shape = SubResource( 3 )

[node name="EggShapeBottom" type="CollisionShape2D" parent="."]
position = Vector2( 0, 2 )
shape = SubResource( 4 )

[node name="Sfx" type="AudioStreamPlayer" parent="."]

[connection signal="body_entered" from="." to="." method="_on_Egg_body_entered"]
[connection signal="timeout" from="HatchTimer" to="." method="_on_HatchTimer_timeout"]
